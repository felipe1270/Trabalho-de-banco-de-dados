// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using trabalho_banco_de_dados.dados;

#nullable disable

namespace trabalhobancodedados.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20221204043302_CrandoTodasTabelas")]
    partial class CrandoTodasTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlunoId"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TCCId")
                        .HasColumnType("int");

                    b.HasKey("AlunoId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("TCCId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.AreaPesquisa", b =>
                {
                    b.Property<int>("AreaPesquisaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaPesquisaId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("TemaId")
                        .HasColumnType("int");

                    b.HasKey("AreaPesquisaId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TemaId");

                    b.ToTable("AreaPesquisa");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoId"));

                    b.Property<string>("departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CursoId");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Examinador", b =>
                {
                    b.Property<int>("ExaminadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExaminadorId"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.HasKey("ExaminadorId");

                    b.ToTable("Examinador");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrupoId"));

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GrupoId");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Professor", b =>
                {
                    b.Property<int>("ProfessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessorId"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfessorId");

                    b.HasIndex("AlunoId");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.RelacionamentoCursoAreaPesquisa", b =>
                {
                    b.Property<int>("RelacionamentoCursoAreaPesquisaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RelacionamentoCursoAreaPesquisaId"));

                    b.Property<int>("AreaPesquisaId")
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.HasKey("RelacionamentoCursoAreaPesquisaId");

                    b.HasIndex("AreaPesquisaId");

                    b.HasIndex("CursoId");

                    b.ToTable("RelacionamentoCursoAreaPesquisa");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.RelacionamentoExaminadorTCC", b =>
                {
                    b.Property<int>("RelacionamentoExaminadorTCCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RelacionamentoExaminadorTCCId"));

                    b.Property<int>("ExaminadorId")
                        .HasColumnType("int");

                    b.Property<int>("TCCId")
                        .HasColumnType("int");

                    b.HasKey("RelacionamentoExaminadorTCCId");

                    b.HasIndex("ExaminadorId");

                    b.HasIndex("TCCId");

                    b.ToTable("RelacionamentoExaminadorTCC");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.RelacionametoTemaTCC", b =>
                {
                    b.Property<int>("RelacionametoTemaTCCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RelacionametoTemaTCCId"));

                    b.Property<int>("TCCId")
                        .HasColumnType("int");

                    b.Property<int>("TemaId")
                        .HasColumnType("int");

                    b.HasKey("RelacionametoTemaTCCId");

                    b.HasIndex("TCCId");

                    b.HasIndex("TemaId");

                    b.ToTable("RelacionametoTemaTCC");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.TCC", b =>
                {
                    b.Property<int>("TCCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TCCId"));

                    b.Property<double>("Nota")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VesaoEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TCCId");

                    b.ToTable("TCC");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Tema", b =>
                {
                    b.Property<int>("TemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemaId"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemaId");

                    b.HasIndex("AlunoId");

                    b.ToTable("Tema");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Aluno", b =>
                {
                    b.HasOne("trabalho_banco_de_dados.Models.Grupo", "Grupo")
                        .WithMany("Aluno")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("trabalho_banco_de_dados.Models.TCC", "TCC")
                        .WithMany("Aluno")
                        .HasForeignKey("TCCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("TCC");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.AreaPesquisa", b =>
                {
                    b.HasOne("trabalho_banco_de_dados.Models.Professor", "Professor")
                        .WithMany("AreaPesquisa")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("trabalho_banco_de_dados.Models.Tema", "Tema")
                        .WithMany("AreasPesquisa")
                        .HasForeignKey("TemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Professor", b =>
                {
                    b.HasOne("trabalho_banco_de_dados.Models.Aluno", "Aluno")
                        .WithMany("Professores")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.RelacionamentoCursoAreaPesquisa", b =>
                {
                    b.HasOne("trabalho_banco_de_dados.Models.AreaPesquisa", "AreaPesquisa")
                        .WithMany("RelacionamentoCursoAreaPesquisa")
                        .HasForeignKey("AreaPesquisaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("trabalho_banco_de_dados.Models.Curso", "Curso")
                        .WithMany("RelacionamentoCursoAreaPesquisa")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaPesquisa");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.RelacionamentoExaminadorTCC", b =>
                {
                    b.HasOne("trabalho_banco_de_dados.Models.Examinador", "Examinador")
                        .WithMany("RelacionamentoExaminadorTCC")
                        .HasForeignKey("ExaminadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("trabalho_banco_de_dados.Models.TCC", "TCC")
                        .WithMany("RelacionamentoExaminadorTCC")
                        .HasForeignKey("TCCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examinador");

                    b.Navigation("TCC");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.RelacionametoTemaTCC", b =>
                {
                    b.HasOne("trabalho_banco_de_dados.Models.TCC", "TCC")
                        .WithMany("RelacionametoTemaTCC")
                        .HasForeignKey("TCCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("trabalho_banco_de_dados.Models.Tema", "Tema")
                        .WithMany("RelacionametoTemaTCC")
                        .HasForeignKey("TemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TCC");

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Tema", b =>
                {
                    b.HasOne("trabalho_banco_de_dados.Models.Aluno", "Alunos")
                        .WithMany("Temas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Aluno", b =>
                {
                    b.Navigation("Professores");

                    b.Navigation("Temas");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.AreaPesquisa", b =>
                {
                    b.Navigation("RelacionamentoCursoAreaPesquisa");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Curso", b =>
                {
                    b.Navigation("RelacionamentoCursoAreaPesquisa");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Examinador", b =>
                {
                    b.Navigation("RelacionamentoExaminadorTCC");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Grupo", b =>
                {
                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Professor", b =>
                {
                    b.Navigation("AreaPesquisa");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.TCC", b =>
                {
                    b.Navigation("Aluno");

                    b.Navigation("RelacionamentoExaminadorTCC");

                    b.Navigation("RelacionametoTemaTCC");
                });

            modelBuilder.Entity("trabalho_banco_de_dados.Models.Tema", b =>
                {
                    b.Navigation("AreasPesquisa");

                    b.Navigation("RelacionametoTemaTCC");
                });
#pragma warning restore 612, 618
        }
    }
}
